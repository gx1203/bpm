<template>
  <div id="systemRoleManage">
    <el-row>
      <el-col :span="6">
        <el-input
          v-model="subjectName"
          placeholder="请输入内容"
          class="search_component"
          clearable
          @keyup.13.native="getList"
        >
          <el-button slot="append" type="primary" @click="getList">搜索</el-button>
        </el-input>
      </el-col>
      <el-button
        type="primary"
        size="small"
        class="float-r margin-r10"
        @click="testPaperAdd = true"
      >添加考试类型</el-button>
    </el-row>
    <el-table :data="roleList" border class="main_tab">
      <el-table-column label="序号" type="index" width="50px"/>
      <el-table-column prop="subjectNo" label="考试类型编号"/>
      <el-table-column prop="subjectName" label="考试类型名称"/>
      <el-table-column label="操作">
        <template slot-scope="scope">
          <el-tooltip :open-delay="1000"
            class="item"
            effect="dark"
            content="修改"
            placement="top"
          >
            <el-button class="no-border" icon="el-icon-edit" circle @click="editRole(scope.row)"/>
          </el-tooltip>
          <el-tooltip :open-delay="1000"
            class="item"
            effect="dark"
            content="删除"
            placement="top"
          >
            <el-button
              class="no-border"
              icon="el-icon-delete"
              circle
              @click="deleteRow(scope.row.id)"
            />
          </el-tooltip>
        </template>
      </el-table-column>
    </el-table>
    <el-pagination background
      :total="pages.total"
      :current-page="pages.pageNum"
      :page-size="pages.pageSize"
      layout="total, prev, pager, next, jumper"
      @size-change="handleSizeChange"
      @current-change="handleCurrentChange"
    />
    <el-dialog
      :title="'新增考试类型'"
      :visible.sync="testPaperAdd"
      :before-close="handleClose"
      width="42%">
      <el-form ref="form" :rules="rules" :model="testPaperForm" label-position="right" label-width="112px">
        <el-form-item label="考试类型编号">
          <el-row>
            <el-col :span="20">
              <el-input v-model="testPaperForm.subjectNo" placeholder="请输入考试类型编号"/>
            </el-col>
          </el-row>
        </el-form-item>
        <el-form-item label="考试类型名称" prop="subjectName">
          <el-row>
            <el-col :span="20">
              <el-input v-model="testPaperForm.subjectName" placeholder="请输入考试类型名称"/>
            </el-col>
          </el-row>
        </el-form-item>
      </el-form>
      <span slot="footer" class="dialog-footer">
        <el-button @click="handleClose">取 消</el-button>
        <el-button type="primary" @click="addtestPaper('form')">确 定</el-button>
      </span>
    </el-dialog>
    <el-dialog
      :title="'修改考试类型'"
      :visible.sync="testPaperAddg"
      width="42%">
      <el-form ref="form" :rules="rules" :model="testPaperFormg" label-position="right" label-width="112px">
        <el-form-item label="考试类型编号">
          <el-row>
            <el-col :span="20">
              <el-input v-model="testPaperFormg.subjectNo" placeholder="请输入考试类型编号"/>
            </el-col>
          </el-row>
        </el-form-item>
        <el-form-item label="考试类型名称" prop="subjectName">
          <el-row>
            <el-col :span="20">
              <el-input v-model="testPaperFormg.subjectName" placeholder="请输入考试类型名称"/>
            </el-col>
          </el-row>
        </el-form-item>
      </el-form>
      <span slot="footer" class="dialog-footer">
        <el-button @click="testPaperAddg = false">取 消</el-button>
        <el-button type="primary" @click="addtestPaperg('form')">确 定</el-button>
      </span>
    </el-dialog>
  </div>
</template>

<script>
import { addSubject, querySubject, delSubjectById, changeSubjectInfo } from '@/api/examination'
import paginations from '@/mixins/pagination_mixin'
export default {
  components: {
  },
  mixins: [paginations],
  data() {
    return {
      input3: '',
      subjectName: '',
      testPaperAdd: false,
      testPaperAddg: false,
      testPaperForm: {},
      testPaperFormg: {},
      pages: {
        pageSize: 10,
        pageNum: 1,
        total: 0
      },
      roleList: [],
      rules: {
        subjectName: [
          { required: true, message: '请输入考试类型名称！', trigger: 'blur' }
        ]
      }
    }
  },
  mounted() {
    this.getList()
  },
  methods: {
    // 新增考试类型信息
    addtestPaper(formName) {
      this.$refs[formName].validate((valid) => {
        if (valid) {
        // 表单上传
          addSubject(this.testPaperForm).then(res => {
            this.testPaperAdd = false
            this.testPaperForm = {}
            this.$message({
              message: '新增考试类型成功!',
              type: 'success'
            })
            this.getList()
          }
          )
        } else {
          this.$message({
            message: '请输入考试类型信息！',
            type: 'warning'
          })
          return false
        }
      })
    },
    addtestPaperg(formName) {
      this.$refs[formName].validate((valid) => {
        if (valid) {
        // 表单上传
          changeSubjectInfo(this.testPaperFormg).then(res => {
            this.testPaperAddg = false
            this.testPaperFormg = {}
            this.$message({
              message: '修改考试类型成功!',
              type: 'success'
            })
            this.getList()
          }
          )
        } else {
          this.$message({
            message: '请输入考试类型信息！',
            type: 'warning'
          })
          return false
        }
      })
    },
    handleClose() {
      this.testPaperAdd = false
      this.testPaperForm = {}
      this.$nextTick(() => {
        this.$refs.form.clearValidate() // 等弹窗里的form表单的dom渲染完在执行this.$refs.staffForm.resetFields()，去除验证
      })
    },
    // 获取考试类型列表
    getList() {
      const obj = {
        startPage: this.pages.pageNum,
        pageSize: this.pages.pageSize,
        subjectName: this.subjectName
      }
      querySubject(obj).then(res => {
        console.log(res)
        this.roleList = res.list
        this.pages.total = res.total
      })
    },
    editRole(val) {
      this.testPaperFormg = {
        id: val.id,
        subjectName: val.subjectName,
        subjectNo: val.subjectNo
      }
      this.testPaperAddg = true
    },
    // 删除考试类型信息
    deleteRow(item) {
      this.$confirm('确认删除该考试类型信息吗?', '提示', {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'warning'
      }).then(() => {
        delSubjectById(item).then(res => {
          this.$message({
            type: 'success',
            message: '删除成功!'
          })
          this.getList()
        })
      }).catch(() => {
        console.log('取消')
      })
    }
  }
}
</script>
